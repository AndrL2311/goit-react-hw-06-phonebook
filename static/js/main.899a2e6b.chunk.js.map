{"version":3,"sources":["App.module.css","components/Filter/Filter.module.css","components/Contacts/Contacts.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reduser.js","redux/store.js","components/Form/Form.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/Contacts/Contacts.jsx","App.jsx","index.js","components/Form/Form.module.css","components/Contact/Contact.module.css"],"names":["module","exports","action","addContact","createAction","data","payload","id","uuidv4","name","number","deleteContact","filterContact","itemsReducer","createReducer","state","find","contact","alert","filter","filterReduser","counterReducer","combineReducers","items","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactspersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","persistor","persistStore","connect","dispatch","onSubmit","useState","setName","setNumber","nameInputId","numberInputId","reset","className","s","formBox","event","preventDefault","label","htmlFor","input","type","value","onChange","currentTarget","pattern","title","required","button","Contact","onDeleteContact","item","onClick","getVisibleContacts","allContact","normalizedFilter","toLowerCase","includes","dataId","list","map","App","container","titlePhonebook","titleContacts","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.899a2e6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"titlePhonebook\":\"App_titlePhonebook__2kfSQ\",\"titleContacts\":\"App_titleContacts__41vwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__tcvns\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('contacts/Add', data => {\n  return {\n    payload: {\n      id: uuidv4(),\n      name: data.name,\n      number: data.number,\n    },\n  };\n});\nconst deleteContact = createAction('contacts/Delete');\nconst filterContact = createAction('contacts/Filter');\n\nconst action = { addContact, deleteContact, filterContact };\n\nexport default action;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport action from './contacts-actions';\n\nconst defaultContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst itemsReducer = createReducer(defaultContacts, {\n  [action.addContact]: (state, { payload }) => {\n    if (state.find(contact => contact.name === payload.name)) {\n      alert(`${payload.name} is alredy in contacts`);\n      return state;\n    } else {\n      return [...state, payload];\n    }\n  },\n  [action.deleteContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filterReduser = createReducer('', {\n  [action.filterContact]: (state, { payload }) => payload,\n});\n\nconst counterReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReduser,\n});\n\nexport default counterReducer;\n","import contactsReducer from './contacts/contacts-reduser';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\nconst contactspersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactspersistConfig, contactsReducer),\n  },\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport action from '../../redux/contacts/contacts-actions';\n\nimport s from './Form.module.css';\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const handleChangeName = event => {\n    const { value } = event.currentTarget;\n    setName(value);\n  };\n\n  const handleChangeNumber = event => {\n    const { value } = event.currentTarget;\n    setNumber(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const data = { name, number };\n    onSubmit(data);\n    // Сбрасываем имя и номер\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.formBox} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor={nameInputId}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          id={nameInputId}\n          value={name}\n          onChange={handleChangeName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label} htmlFor={numberInputId}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          id={numberInputId}\n          onChange={handleChangeNumber}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSubmit: data => dispatch(action.addContact(data)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Form);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { connect } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport action from '../../redux/contacts/contacts-actions';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name{' '}\n      <input\n        type=\"text\"\n        className={s.input}\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispachToProps = dispatch => ({\n  onChange: event => dispatch(action.filterContact(event.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispachToProps)(Filter);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.css';\n\nfunction Contact({ id, name, number, onDeleteContact }) {\n  return (\n    <li className={s.item}>\n      <span className={s.name}>{name}</span>\n      <span className={s.number}>{number}</span>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nexport default Contact;\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import { connect } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nimport Contact from '../Contact/Contact';\nimport action from '../../redux/contacts/contacts-actions';\n\nfunction Contacts({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <Contact\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n}\n\nconst getVisibleContacts = (allContact, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContact.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispachToProps = dispatch => ({\n  onDeleteContact: dataId => dispatch(action.deleteContact(dataId)),\n});\n\nexport default connect(mapStateToProps, mapDispachToProps)(Contacts);\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","// import { useState } from 'react';\n// import { v4 as uuidv4 } from 'uuid';\n\nimport s from './App.module.css';\nimport Form from './components/Form/Form';\nimport Filter from './components/Filter/Filter';\nimport Contacts from './components/Contacts/Contacts';\n\nfunction App() {\n  return (\n    <div className={s.container}>\n      <h1 className={s.titlePhonebook}>Phonebook</h1>\n      <Form />\n      <h2 className={s.titleContacts}>Contacts</h2>\n      <Filter />\n      <Contacts />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport './index.css';\nimport App from './App';\nimport { PersistGate } from 'redux-persist/integration/react';\n// import reportWebVitals from './reportWebVitals';\n// ============================================\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBox\":\"Form_formBox__t4FbK\",\"button\":\"Form_button__243jh\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contact_item__1d_kg\",\"button\":\"Contact_button__1wUL0\",\"name\":\"Contact_name__2ZcKm\",\"number\":\"Contact_number__2MvnN\"};"],"sourceRoot":""}